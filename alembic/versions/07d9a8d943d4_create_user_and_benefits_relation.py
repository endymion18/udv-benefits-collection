"""create user and benefits relation

Revision ID: 07d9a8d943d4
Revises: b72e8b0788d3
Create Date: 2024-11-25 23:20:01.799625

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07d9a8d943d4'
down_revision: Union[str, None] = 'b72e8b0788d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefit_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_benefit_relation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('benefit_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('files', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefit.id'], ),
    sa.ForeignKeyConstraint(['status'], ['benefit_statuses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.execute(
        """INSERT INTO benefit_statuses VALUES 
        (1, 'в обработке'), 
        (2, 'одобрена'), 
        (3, 'отклонена'), 
        (4, 'завершена')""")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_benefit_relation')
    op.drop_table('benefit_statuses')
    # ### end Alembic commands ###
